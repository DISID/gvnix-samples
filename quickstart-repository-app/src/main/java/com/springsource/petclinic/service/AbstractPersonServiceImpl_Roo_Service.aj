// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.service;

import com.springsource.petclinic.domain.AbstractPerson;
import com.springsource.petclinic.repository.AbstractPersonRepository;
import com.springsource.petclinic.service.AbstractPersonServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AbstractPersonServiceImpl_Roo_Service {
    
    declare @type: AbstractPersonServiceImpl: @Service;
    
    declare @type: AbstractPersonServiceImpl: @Transactional;
    
    @Autowired
    AbstractPersonRepository AbstractPersonServiceImpl.abstractPersonRepository;
    
    public long AbstractPersonServiceImpl.countAllAbstractpeople() {
        return abstractPersonRepository.count();
    }
    
    public void AbstractPersonServiceImpl.deleteAbstractPerson(AbstractPerson abstractPerson) {
        abstractPersonRepository.delete(abstractPerson);
    }
    
    public AbstractPerson AbstractPersonServiceImpl.findAbstractPerson(Long id) {
        return abstractPersonRepository.findOne(id);
    }
    
    public List<AbstractPerson> AbstractPersonServiceImpl.findAllAbstractpeople() {
        return abstractPersonRepository.findAll();
    }
    
    public List<AbstractPerson> AbstractPersonServiceImpl.findAbstractPersonEntries(int firstResult, int maxResults) {
        return abstractPersonRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void AbstractPersonServiceImpl.saveAbstractPerson(AbstractPerson abstractPerson) {
        abstractPersonRepository.save(abstractPerson);
    }
    
    public AbstractPerson AbstractPersonServiceImpl.updateAbstractPerson(AbstractPerson abstractPerson) {
        return abstractPersonRepository.save(abstractPerson);
    }
    
}
